<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTelaLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>